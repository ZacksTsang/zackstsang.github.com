<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zacks 的开发随想记</title>
  <subtitle>iOS、Android、全端的碎碎念</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.zacksdev.com/"/>
  <updated>2016-04-19T02:59:31.000Z</updated>
  <id>http://blog.zacksdev.com/</id>
  
  <author>
    <name>Zacks Tsang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[iOS]那些年，遇到的坑</title>
    <link href="http://blog.zacksdev.com/2015/11/19/2015-11-19-ios-na-xie-nian-,yu-dao-de-keng/"/>
    <id>http://blog.zacksdev.com/2015/11/19/2015-11-19-ios-na-xie-nian-,yu-dao-de-keng/</id>
    <published>2015-11-19T01:52:00.000Z</published>
    <updated>2016-04-19T02:59:31.000Z</updated>
    
    <content type="html">&lt;p&gt;我做 iOS App 开发有几年了（全栈是我本体），从看别人代码到使用别人代码，再到自己写代码，码农的气息从未减少。之前看过一篇文章，说的是程序员不配叫工程师，因为这样破坏了&lt;em&gt;工程&lt;/em&gt;的一个悠久的历史传统——为公众利益而设计和建造的基础设施，看来我还是老老实实做回码农吧。&lt;/p&gt;
&lt;h2 id=&quot;性能问题&quot;&gt;&lt;a href=&quot;#性能问题&quot; class=&quot;headerlink&quot; title=&quot;性能问题&quot;&gt;&lt;/a&gt;性能问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;获取是否允许系统定位&lt;/p&gt;
&lt;p&gt;  估计很多小伙伴们一开始都不怎么在意是否需要加变量来存这个 &lt;code&gt;BOOL&lt;/code&gt; 值，直接使用以下这种方式进行判断：&lt;/p&gt;
  &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// objc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;([CLLocationManager locationServicesEnabled]&amp;amp;&amp;amp;[CLLocationManager authorizationStatus] != kCLAuthorizationStatusDenied)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// code here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样简单快捷，不用额外增加变量，在一次开销的情况下，这样做是没啥大问题，但在多次使用的情况下，这就会带来性能上问题，因为其读取速度有些慢，在多次操作下就会变得异常的慢。所以有多次开销的情况，建议使用变量来存储该值，再使用其变量去操作，避免不必要的系统开销。&lt;/p&gt;
  &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; isLocationOn = [CLLocationManager locationServicesEnabled]&amp;amp;&amp;amp;[CLLocationManager authorizationStatus] != kCLAuthorizationStatusDenied;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;多语言问题&quot;&gt;&lt;a href=&quot;#多语言问题&quot; class=&quot;headerlink&quot; title=&quot;多语言问题&quot;&gt;&lt;/a&gt;多语言问题&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;货币的处理&lt;/p&gt;
&lt;p&gt;  当我们要格式化一些数据时，必然会使用到 &lt;code&gt;NSNumberFormatter&lt;/code&gt; ，例如我们想格式化数字为123,12.00 这样的格式时，就会使用以下的代码：&lt;/p&gt;
  &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSNumberFormatter&lt;/span&gt; *format = [&lt;span class=&quot;built_in&quot;&gt;NSNumberFormatter&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[format setPositiveFormat:&lt;span class=&quot;string&quot;&gt;@&quot;#,###.##&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *result = [format stringFromNumber:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithDouble:&lt;span class=&quot;number&quot;&gt;2015.01&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;理想的情况下，这样就满足了我们的需要，但事实上我们需要的是 123,12.01 这样的结果，在中文系统的情况下我们是会得到我们想要的结果，但切换了系统语言时，就会看到杯具的事情发生了。那个格式化的结果变了，变成其它语言的习惯，不是我们想要的结果。那需要我们想要的结果时，那就得设置 &lt;code&gt;format&lt;/code&gt; 语言属性。&lt;/p&gt;
  &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;NSNumberFormatter&lt;/span&gt; *format = [&lt;span class=&quot;built_in&quot;&gt;NSNumberFormatter&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[format setPositiveFormat:&lt;span class=&quot;string&quot;&gt;@&quot;#,###.##&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[format setLocal:[[&lt;span class=&quot;built_in&quot;&gt;NSLocal&lt;/span&gt; alloc] initWithLocaleIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;zh&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *result = [format stringFromNumber:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithDouble:&lt;span class=&quot;number&quot;&gt;2015.01&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;时间处理&lt;/p&gt;
&lt;p&gt;  时间的格式化也会有类似货币那种情况，在 &lt;code&gt;NSDateFormatter&lt;/code&gt; 时设置我们需要的语言区域。&lt;/p&gt;
  &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDateFormatter&lt;/span&gt; *format = [&lt;span class=&quot;built_in&quot;&gt;NSDateFormatter&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置成自己需要固定的语言区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [format setLocale:[&lt;span class=&quot;built_in&quot;&gt;NSLocale&lt;/span&gt; localeWithLocaleIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;en&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如我们需要得到月份，中文：&lt;code&gt;7&lt;/code&gt;、英文：&lt;code&gt;July&lt;/code&gt;, 那格式化字符串对应为：&lt;code&gt;MM&lt;/code&gt;、&lt;code&gt;MMMM&lt;/code&gt;，理想的情况下自然可以得到正确的结果（前提是在英文的系统下），但系统式中文时，就得不到那样的结果，针对这种情况，就需要设置 &lt;code&gt;format&lt;/code&gt; 的地区，固定其语言区域，避免出现意想不到的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我做 iOS App 开发有几年了（全栈是我本体），从看别人代码到使用别人代码，再到自己写代码，码农的气息从未减少。之前看过一篇文章，说的是程序员不配叫工程师，因为这样破坏了&lt;em&gt;工程&lt;/em&gt;的一个悠久的历史传统——为公众利益而设计和建造的基础设施，看来我还是老老实实做
    
    </summary>
    
      <category term="iOS" scheme="http://blog.zacksdev.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blog.zacksdev.com/tags/iOS/"/>
    
      <category term="objective-c" scheme="http://blog.zacksdev.com/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>【翻译】RequireJS 的基本原理</title>
    <link href="http://blog.zacksdev.com/2015/09/25/2015-09-25-requirejs-ji-ben-yuan-li/"/>
    <id>http://blog.zacksdev.com/2015/09/25/2015-09-25-requirejs-ji-ben-yuan-li/</id>
    <published>2015-09-25T03:48:23.000Z</published>
    <updated>2016-04-19T08:09:27.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;本文翻译来源：&lt;a href=&quot;http://www.telerik.com/blogs/requirejs-fundamentals&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.telerik.com/blogs/requirejs-fundamentals&lt;/a&gt;&lt;br&gt;此翻译如有冒犯之处，请联系我 &lt;code&gt;zshaojia@gmail.com&lt;/code&gt; 进行删除，且本文不会用于商业用途。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你是一个 &lt;code&gt;JavaScript&lt;/code&gt; 开发者，也许会见过各种各样的有关于 &lt;code&gt;JavaScript&lt;/code&gt; 的模块。模块化开发是JavaScript的一个很热门的话题，而且会成为潮流。事实上，如何解决这个问题对于你的代码编写是最基本的。&lt;/p&gt;
&lt;h2 id=&quot;为什么使用模块&quot;&gt;&lt;a href=&quot;#为什么使用模块&quot; class=&quot;headerlink&quot; title=&quot;为什么使用模块&quot;&gt;&lt;/a&gt;为什么使用模块&lt;/h2&gt;&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt; 是一个很缺乏模块化开发的脚本语言&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;哇！那这意味着什么？为啥缺乏模块化开发？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你第一时间想到这，很好你站在一个很好的队伍。&lt;a href=&quot;http://www.twitter.com/derickbaily&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Derick Bailey&lt;/a&gt; 对于模块化这个概念作了如下诠释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模块化就是将一组有关联性的东西封装或打包起来，它里面包含了对象、方法、变量，或者其它任何东西。创建模块封装展示它统一的管理方式，我们可以将一些小功能打包起来，以方便放在其它大的模块里使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据这个想法：在 &lt;code&gt;.NET&lt;/code&gt; 或 &lt;code&gt;Java&lt;/code&gt;，你可以使用类 (classes)或创建一个项目。之后你得到一个编译好的模块，这个模块包含你已声明类。现在你需要在其它项目使用这个模块，那它非常容易地使用，只需将它关联或引入项目里即可。但这个组合、封装的概念，在&lt;code&gt;JavaScript&lt;/code&gt; 世界里是完全缺失的。&lt;/p&gt;
&lt;p&gt;引起这个问题，大致有一下两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;JavaScript&lt;/code&gt; 一直没有创建模块的语法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JavaScript&lt;/code&gt; 没有一个语法让你加载一个已定义的模块，你不得不浪费时间去管理那些乏味的 &lt;code&gt;script&lt;/code&gt; 标签名和全局依赖引用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;创建模块&quot;&gt;&lt;a href=&quot;#创建模块&quot; class=&quot;headerlink&quot; title=&quot;创建模块&quot;&gt;&lt;/a&gt;创建模块&lt;/h2&gt;&lt;p&gt;我们来看下这个问题通常是如何产生的。假设我们有个简单的应用需要使用到 color palette widget。功能是在 color palette 移动选择器去改变页面的颜色。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更多有关于Color Picker widgets有趣的例子，我没有全部展现，可以&lt;a href=&quot;http://jsbin.com/oliban/4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考这里&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我们看下在JavaScript中使用的场景。&lt;/p&gt;
&lt;p&gt;Color Experiments Code&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// open a document ready function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// function that just changes the background color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; setBackground = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;color&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body).css(&lt;span class=&quot;string&quot;&gt;&quot;background-color&quot;&lt;/span&gt;, color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// function to handle the pallete color selection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; setColor = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// the color object contains all the hex, rgba, and hsl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// conversions and utilities&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; color = e.sender.color().toBytes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// set the color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      setBackground(e.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// select and create the color pallete&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; colors = $(&lt;span class=&quot;string&quot;&gt;&quot;#colors&quot;&lt;/span&gt;).kendoFlatColorPicker(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      change: setColor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      value: &lt;span class=&quot;string&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;).getKendoFlatColorPicker();   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当我看到上面的代码，我意识到可以将它抽取成两个不同的对象.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个用于改变页面颜色的公共方法 &lt;code&gt;utility&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一个 &lt;code&gt;color palette&lt;/code&gt; 的选择事件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 &lt;code&gt;JavaScript&lt;/code&gt; 中，可以有几个方法去创建一个实体，但最基本的方法是使用 &lt;a href=&quot;http://benalman.com/news/2010/11/immediately-invoked-function-expression/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Immediately Invoked Function Expression (IIFE)&lt;/a&gt;，会给你返回一个对象。我们就按照这个思路开始写 &lt;code&gt;utility&lt;/code&gt; 方法去改变页面背景的颜色。&lt;/p&gt;
&lt;h3 id=&quot;开始创建一个简单的模块&quot;&gt;&lt;a href=&quot;#开始创建一个简单的模块&quot; class=&quot;headerlink&quot; title=&quot;开始创建一个简单的模块&quot;&gt;&lt;/a&gt;开始创建一个简单的模块&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 变量声明在方法的外面是全局的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建了一个 `APP` 的名称空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; APP = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.APP || &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// use a function that executes right away and assign&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// whatever it returns to the utils variable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;APP.utils = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// return an object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// declare the function to change the background color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setBackground: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;color&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body).css(&lt;span class=&quot;string&quot;&gt;&quot;background-color&quot;&lt;/span&gt;, color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我意识到你可能不太喜欢在一个对象里只用到一个操作，但它对于简化总体的想法很有帮助，稍微忍受下我。现在我们有了 &lt;code&gt;utils&lt;/code&gt; 对象，它封装好 &lt;code&gt;setBackground&lt;/code&gt; 方法和其它可能封装好的其他方法，我们只需这样使用它&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// set the background color to blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; APP.utils.setBackground(&lt;span class=&quot;string&quot;&gt;&quot;#336699&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;下一步，我们可以封装 &lt;code&gt;color palette widget&lt;/code&gt; 为一个模块，这个模块需要访问到 &lt;code&gt;utils&lt;/code&gt; 对象，固需要使用到一样的名称空间 &lt;code&gt;APP&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;模块化-The-Palette&quot;&gt;&lt;a href=&quot;#模块化-The-Palette&quot; class=&quot;headerlink&quot; title=&quot;模块化 The Palette&quot;&gt;&lt;/a&gt;模块化 &lt;code&gt;The Palette&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// create the color palette module off the app namespace&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// all that we need to return out of this function is an instance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// of the color palette widget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;APP.palette = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// this function is private and not available to utils&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// function to handle the pallete color selection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; setColor = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// the color object contains all the hex, rgba, and hsl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// conversions and utilities&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; color = e.sender.color().toBytes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// set the color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      APP.utils.setBackground(e.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// select and create the color pallete&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; colors = $(&lt;span class=&quot;string&quot;&gt;&quot;#colors&quot;&lt;/span&gt;).kendoFlatColorPicker(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      change: setColor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      value: &lt;span class=&quot;string&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;).getKendoFlatColorPicker();   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// just return the entire widget instance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; colors;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在代码模块化已经完成，上面的代码相当的累赘，我们可以将它们每个模块抽取为一个文件，即下面两个文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;utils.js&lt;/li&gt;
&lt;li&gt;palette.js&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在页面上引用这两个文件即可&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/Scripts/app/utils.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/Scripts/app/palette.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们不需任何内嵌的脚本，因为只要它们在页面包含我们的模块和模块在执行所关联依赖的模块即可，但这样的处理方式还是存在很大的缺陷。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;utils.js&lt;/code&gt; 文件必须关联在第一位，因为其他模块依赖到它。&lt;/li&gt;
&lt;li&gt;这两个文件已引入了，但只是一个无效果的页面，想象一下你到底需要引入多少个文件在一个完整的企业应用里。&lt;/li&gt;
&lt;li&gt;你可能会使用如 ASP.NET MVC Bundling 编译工具，但当你的应用还需要你引入其他的模块，而这些模块又依赖其他的模块时。在你的脑袋里可以一直保持着这种变化，但你的APP也会变得臃肿起来，你会发现它越来越难管理。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.telerik.com/sfimages/default-source/blogs/gremlin-jpg-jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;对于上面那个问题，最终-RequireJS-出现了&quot;&gt;&lt;a href=&quot;#对于上面那个问题，最终-RequireJS-出现了&quot; class=&quot;headerlink&quot; title=&quot;对于上面那个问题，最终 RequireJS 出现了&quot;&gt;&lt;/a&gt;对于上面那个问题，最终 RequireJS 出现了&lt;/h3&gt;&lt;p&gt;RequireJS 的核心思想是允许你指定一个 JavaScript 文件定义哪些是依赖文件，这样你就可以很确定当你的代码执行时，那些依赖文件是已经引入的。&lt;/p&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;p&gt;&lt;code&gt;RequireJS&lt;/code&gt; 只是一 &lt;code&gt;JavaScript&lt;/code&gt; 文件，它根本解决了 &lt;code&gt;JavaScript&lt;/code&gt; 文件之间依赖的问题。你可以在 &lt;a href=&quot;http://requirejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RequireJS&lt;/a&gt; 网站下载，或者使用自己的包管理工具下载。我使用 ASP.NET 工作，所以我用 NuGet 获得它。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PM&amp;gt; Install-Package RequireJS&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;下载后，会得到2个文件在下载的文件夹里，我们只需 &lt;code&gt;require.js&lt;/code&gt; 这个文件即可。其它文件如 &lt;code&gt;r.js&lt;/code&gt; 是串联和缩减你的文件，我们会简单说下它。&lt;/p&gt;
&lt;p&gt;通常你会看到 &lt;code&gt;RequireJS&lt;/code&gt; 项目结构，所以你会把你的应用放到一个 &lt;code&gt;app&lt;/code&gt; 的文件夹下。你的 &lt;code&gt;JavaScript&lt;/code&gt; 文件会放到 &lt;code&gt;mylibs&lt;/code&gt; 文件夹下，第三方脚本文件放在 &lt;code&gt;libs&lt;/code&gt; 文件夹下，这不是信仰什么的，只是建议，这个结构会帮助你很舒服地管理那些 &lt;code&gt;JavaScript&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h4 id=&quot;主要配置&quot;&gt;&lt;a href=&quot;#主要配置&quot; class=&quot;headerlink&quot; title=&quot;主要配置&quot;&gt;&lt;/a&gt;主要配置&lt;/h4&gt;&lt;p&gt;当我开始使用 &lt;code&gt;RequireJS&lt;/code&gt; 时，我需要创建一个 &lt;code&gt;main&lt;/code&gt; 文件作为条目，我将它命名为 &lt;code&gt;main.js&lt;/code&gt; ，把它放在app的目录下和文件夹 &lt;code&gt;mylibs&lt;/code&gt; 同级。在 &lt;code&gt;main.js&lt;/code&gt; 会定义 &lt;code&gt;require&lt;/code&gt; 方法，这个方法是 &lt;code&gt;require.js&lt;/code&gt; 定义的。在 &lt;code&gt;mian.js&lt;/code&gt; 文件里我声明了两个我需要加载的文件，它会根据那些文件的路径注入进来，这样就可以执行它们的方法。 &lt;code&gt;RequireJS&lt;/code&gt; 只接受 &lt;code&gt;JavaScript&lt;/code&gt; 文件，所以不需要带有文件的 &lt;code&gt;.js&lt;/code&gt; 后缀。&lt;/p&gt;
&lt;p&gt;main.js&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;mylibs/utils&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;mylibs/palette&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;utils, palette&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the app is loaded...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;现在我把 &lt;code&gt;RequireJS&lt;/code&gt; 引入到我的 &lt;code&gt;html&lt;/code&gt; 页面，和通过 &lt;code&gt;data-main&lt;/code&gt; 指定 &lt;code&gt;mian.js&lt;/code&gt; 文件。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/Scripts/require.js&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-main&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/Scripts/app/main.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;程序运行后，&lt;code&gt;RequireJS&lt;/code&gt; 已经把那两个文件加载进去了，如果你打开浏览器工具会看到那两个文件已经加载好了。&lt;/p&gt;
&lt;h4 id=&quot;指定依赖关系&quot;&gt;&lt;a href=&quot;#指定依赖关系&quot; class=&quot;headerlink&quot; title=&quot;指定依赖关系&quot;&gt;&lt;/a&gt;指定依赖关系&lt;/h4&gt;&lt;p&gt;现在开始一些有趣的东西，&lt;code&gt;palette.js&lt;/code&gt; 依赖 &lt;code&gt;utils.js&lt;/code&gt;。缺少它，&lt;code&gt;palette.js&lt;/code&gt; 就运行不了，我着手修改这些文件让 &lt;code&gt;RequireJS&lt;/code&gt; 清楚知道那些依赖关系。我在那些文件上使用 &lt;code&gt;define&lt;/code&gt; 方法。&lt;code&gt;define&lt;/code&gt; 方法是 &lt;code&gt;RequireJS&lt;/code&gt; 的方法，它需要两个参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要依赖的 JavaScript 文件路径的数组&lt;/li&gt;
&lt;li&gt;这个方法会在确保  RequireJS 加载完那些依赖的文件后才执行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一个 &lt;code&gt;RequireJS&lt;/code&gt; &lt;code&gt;Palette&lt;/code&gt; 模块如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;define([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;mylibs/utils&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;utils&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// this function is private and not available to sliders or utils&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// function to handle the pallete color selection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; setColor = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// the color object contains all the hex, rgba, and hsl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// conversions and utilities&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; color = e.sender.color().toBytes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// set the color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      utils.setBackground(e.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// select and create the color palette&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; colors = $(&lt;span class=&quot;string&quot;&gt;&quot;#colors&quot;&lt;/span&gt;).kendoFlatColorPicker(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      change: setColor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      value: &lt;span class=&quot;string&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;).getKendoFlatColorPicker();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// just return the entire widget instance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; colors;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;utils&lt;/code&gt; 模块没有依赖其他模块&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;define([], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// declare the function to change the background color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      setBackground: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;color&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          $(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body).css(&lt;span class=&quot;string&quot;&gt;&quot;background-color&quot;&lt;/span&gt;, color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;有没注意到那些 &lt;em&gt;IIFF&lt;/em&gt; 的定义已经消失了？没有了 &lt;code&gt;APP&lt;/code&gt; 的变量/名称空间。&lt;code&gt;RequireJS&lt;/code&gt; 会处理你所定义的模块供你使用,你任何时候可以使用那些定义好的模块，只需执行 &lt;code&gt;require(&amp;quot;Your Module Name&amp;quot;)&lt;/code&gt; 即可。我也可以在 &lt;code&gt;main&lt;/code&gt; 中完全移除 &lt;code&gt;utils.js&lt;/code&gt;，只加载 &lt;code&gt;palette.js&lt;/code&gt;，&lt;code&gt;RequireJS&lt;/code&gt; 会加载 &lt;code&gt;palette.js&lt;/code&gt; 时，发现其依赖 &lt;code&gt;utils.js&lt;/code&gt; 会自动第一个去加载。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;mylibs/palette&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the app is running...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;第三方库&quot;&gt;&lt;a href=&quot;#第三方库&quot; class=&quot;headerlink&quot; title=&quot;第三方库&quot;&gt;&lt;/a&gt;第三方库&lt;/h3&gt;&lt;p&gt;在页面上我还会用到 &lt;code&gt;Kendo UI&lt;/code&gt; 和 &lt;code&gt;Jquery&lt;/code&gt;，但它们没包含在我的 &lt;code&gt;RequireJS&lt;/code&gt; 配置中，这会有什么问题吗？当然不会啦，但你可以将第三方的库通过 &lt;code&gt;RequireJS&lt;/code&gt; 包含进来，这样就可以使用简称去访问它们各自的方法。&lt;/p&gt;
&lt;h4 id=&quot;配置路径&quot;&gt;&lt;a href=&quot;#配置路径&quot; class=&quot;headerlink&quot; title=&quot;配置路径&quot;&gt;&lt;/a&gt;配置路径&lt;/h4&gt;&lt;p&gt;你可以将第三方的包配置在 &lt;code&gt;mian.js&lt;/code&gt; 的 &lt;code&gt;path&lt;/code&gt; 里，&lt;code&gt;path&lt;/code&gt; 变量是用来指向那些库的路径。如果你想使用 &lt;code&gt;CDN&lt;/code&gt; 去加载那些库，你可以定义使用本地的路径当 &lt;code&gt;CDN&lt;/code&gt; 访问不到的话。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;.config(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  paths: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// specify a path to jquery, the second declaration is the local fallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      jquery: [&lt;span class=&quot;string&quot;&gt;&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&quot;../Scripts/jquery.1.9.1.min&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;mylibs/palette&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;jquery, palette&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the app is running...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你会把 &lt;code&gt;jQuery&lt;/code&gt; 放在 &lt;code&gt;main&lt;/code&gt; 里，但很多人则选择新加一个 &lt;code&gt;app.js&lt;/code&gt; 文件，然后把自己定义模块放到里面去，&lt;code&gt;app.js&lt;/code&gt; 用来加载你所有的模块。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;.config(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  paths: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// specify a path to jquery, the second declaration is the local fallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      jquery: [ &lt;span class=&quot;string&quot;&gt;&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;string&quot;&gt;&quot;../Scripts/jquery.1.9.1.min&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;jquery, app&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// this loads jquery and your app file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然你也可以在 &lt;code&gt;palette.js&lt;/code&gt; 指定依赖 &lt;code&gt;jQuery&lt;/code&gt;，你也可以任何一个文件指定依赖项，但 &lt;code&gt;RequireJS&lt;/code&gt; 会知道如何加载这些文件而不重复。因为我在 &lt;code&gt;palette.js&lt;/code&gt; 之前里指定 &lt;code&gt;jQuery&lt;/code&gt;，但并不意味着 &lt;code&gt;RequireJS&lt;/code&gt; 都会加载 &lt;code&gt;jQuery&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;第三方库依赖其他库&quot;&gt;&lt;a href=&quot;#第三方库依赖其他库&quot; class=&quot;headerlink&quot; title=&quot;第三方库依赖其他库&quot;&gt;&lt;/a&gt;第三方库依赖其他库&lt;/h3&gt;&lt;p&gt;有些第三方类库会依赖其它一些第三方库，如 &lt;code&gt;Kendo UI&lt;/code&gt; 依赖 &lt;code&gt;jQuery&lt;/code&gt;。然而不同的 &lt;code&gt;Kendo UI&lt;/code&gt; 模块在 &lt;code&gt;RequireJS&lt;/code&gt; 上会指定内部依赖，但不会指定依赖 &lt;code&gt;jQuery&lt;/code&gt;，尽管很容易在一条线上去请求。在这里我添加了一个本地的 &lt;code&gt;Kendo UI&lt;/code&gt; 的依赖，使用 &lt;code&gt;shim&lt;/code&gt; 方法让 &lt;code&gt;RequireJS&lt;/code&gt; 知道在加载 &lt;code&gt;Kendo UI&lt;/code&gt; 之前必须先加载 &lt;code&gt;jQuery&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Kendo UI&lt;/code&gt; 指定依赖 &lt;code&gt;jQuery&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;.config(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  paths: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// specify a path to jquery, the second declaration is the local fallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      jquery: [ &lt;span class=&quot;string&quot;&gt;&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;string&quot;&gt;&quot;../Scripts/jquery.1.9.1.min&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      kendo: [ &lt;span class=&quot;string&quot;&gt;&quot;//cdn.kendostatic.com/2013.1.319/js/kendo.web.min&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;string&quot;&gt;&quot;../kendo/2013.1.319/kendo.web.min&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// inform requirejs that kendo ui depends on jquery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  shim: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;kendo&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          deps: [&lt;span class=&quot;string&quot;&gt;&quot;jquery&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;jquery, kendo, app&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// this loads jquery and your app file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;现在可以在页面上移除 &lt;code&gt;jQuery&lt;/code&gt; 和 &lt;code&gt;Kendo UI&lt;/code&gt; 的 &lt;code&gt;script&lt;/code&gt; 标签，让你的模块去指定需要他们。例如：在 &lt;code&gt;palette&lt;/code&gt; 的文件中，现在改成这样：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;define([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;jquery&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;kendo&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;mylibs/utils&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;$, kendo, utils&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// this function is private and not available to sliders or utils&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// function to handle the pallete color selection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; setColor = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// the color object contains all the hex, rgba, and hsl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// conversions and utilities&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; color = e.sender.color().toBytes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// set the color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        utils.setBackground(e.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// select and create the color pallete&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; colors = $(&lt;span class=&quot;string&quot;&gt;&quot;#colors&quot;&lt;/span&gt;).kendoFlatColorPicker(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        change: setColor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: &lt;span class=&quot;string&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;).getKendoFlatColorPicker();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// just return the entire widget instance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; colors;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;应用已经全部配置好，可以部署了。可以通过 &lt;code&gt;as-is&lt;/code&gt; 去部署，但不太推荐这样子做。你需要压缩和串联你的 &lt;code&gt;script&lt;/code&gt; 文件在发布的时候，这就是 &lt;code&gt;r.js&lt;/code&gt; 的作用了。&lt;/p&gt;
&lt;h4 id=&quot;我先告诉你需要安装-NodeJS&quot;&gt;&lt;a href=&quot;#我先告诉你需要安装-NodeJS&quot; class=&quot;headerlink&quot; title=&quot;我先告诉你需要安装 NodeJS&quot;&gt;&lt;/a&gt;我先告诉你需要安装 &lt;code&gt;NodeJS&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在使用 &lt;code&gt;r.js&lt;/code&gt; 之前，需要安装 &lt;a href=&quot;http://nodejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NodeJS&lt;/a&gt;，如果你没有 &lt;code&gt;Node&lt;/code&gt; 或让你很不安，那只需把它看作是一个实用的命令行插件，可以帮助你自动化管理一些工作流，无论在操作系统或平台。在这案例，我需要的用到 &lt;code&gt;NodeJS&lt;/code&gt; 运行 &lt;code&gt;r.js&lt;/code&gt; 文件，该文件将在 &lt;code&gt;JavaScript&lt;/code&gt; 平台上执行构建工作。&lt;/p&gt;
&lt;p&gt;完成安装 &lt;code&gt;NodeJS&lt;/code&gt; 后，就可以运行 &lt;code&gt;r.js&lt;/code&gt; 去构建和优化那些 &lt;code&gt;Require&lt;/code&gt; 模块文件。&lt;/p&gt;
&lt;h4 id=&quot;强大的优化&quot;&gt;&lt;a href=&quot;#强大的优化&quot; class=&quot;headerlink&quot; title=&quot;强大的优化&quot;&gt;&lt;/a&gt;强大的优化&lt;/h4&gt;&lt;p&gt;&lt;code&gt;RequireJS&lt;/code&gt; 优化是很完美的，但毕竟它不知需要优化那些 &lt;code&gt;js&lt;/code&gt;，你需要给到它一个文件去告诉它那些文件需要压缩在你的项目里。这个文件你可以随便命名，但我习惯命名为 &lt;code&gt;build.js&lt;/code&gt; 和把它放在最顶级的目录里，它不需要公开指定一个地址。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  baseUrl: &lt;span class=&quot;string&quot;&gt;&quot;./Scripts/app&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  paths: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      jquery: &lt;span class=&quot;string&quot;&gt;&quot;empty:&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      kendo: &lt;span class=&quot;string&quot;&gt;&quot;empty:&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  out: &lt;span class=&quot;string&quot;&gt;&quot;Scripts/main-built.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;你注意大，我给 &lt;code&gt;Kendo UI&lt;/code&gt; 和 &lt;code&gt;jQuery&lt;/code&gt; 提供的 &lt;code&gt;path&lt;/code&gt; 为 &lt;code&gt;empty&lt;/code&gt; ，因为需要告诉 &lt;code&gt;RequireJS&lt;/code&gt; 这些是远程的 &lt;code&gt;script&lt;/code&gt; 只是关联，不需要编译。&lt;/p&gt;
&lt;p&gt;然后在 &lt;code&gt;build.js&lt;/code&gt; 文件的路径下，通过 &lt;code&gt;Node&lt;/code&gt; 运行 &lt;code&gt;r.js&lt;/code&gt; 即可。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// run from the project directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node r.js -o build.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行完后会产生一个 &lt;code&gt;main-build.js&lt;/code&gt; 文件，把在项目中包含的 &lt;code&gt;JavaScript&lt;/code&gt; 文件进行了串联和压缩成了这个文件。所以可以修改一下 &lt;code&gt;data-main&lt;/code&gt; 为 &lt;code&gt;main-build.js&lt;/code&gt; 文件，代替 &lt;code&gt;app&lt;/code&gt; 和 &lt;code&gt;main.js&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;ASP-NET-的特殊处理&quot;&gt;&lt;a href=&quot;#ASP-NET-的特殊处理&quot; class=&quot;headerlink&quot; title=&quot;ASP.NET 的特殊处理&quot;&gt;&lt;/a&gt;ASP.NET 的特殊处理&lt;/h5&gt;&lt;p&gt;我（原作者）一直是 &lt;code&gt;ASP.NET&lt;/code&gt; 的工作者，为了简化我（原作者）的工作流程，做了些改变。&lt;/p&gt;
&lt;p&gt;发布的时候，加载正确的 JavaScript&lt;/p&gt;
&lt;p&gt;我不想不停的更改我的 &lt;code&gt;script&lt;/code&gt; 脚本，当我是在开发版本和发布新版本的时候。我将在 &lt;code&gt;homecontroller&lt;/code&gt; 去嗅出当前我的开发模式，然后在 &lt;code&gt;html&lt;/code&gt; 里使用相应的脚本语言&lt;br&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;Index&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; DEBUG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ViewBag.useBuild = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ViewBag.useBuild = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; View();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;按条件加载不同的文件&lt;br&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ViewBag.useBuild) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;@Url.Content(&quot;&lt;/span&gt;~/Scripts/require.js&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt; data-main=&lt;span class=&quot;string&quot;&gt;&quot;@Url.Content(&quot;&lt;/span&gt;~/Scripts/main-built.js&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;@Url.Content(&quot;&lt;/span&gt;~/Scripts/require.js&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt; data-main=&lt;span class=&quot;string&quot;&gt;&quot;@Url.Content(&quot;&lt;/span&gt;~/Scripts/app/main.js&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;整合优化过的JavaScript到发布版本上，我也不想每次都要跳到控制台上去去执行优化当我发布的时候，这是你可以指定一个预先编译，在 &lt;code&gt;Project / Project Settings / Build Events&lt;/code&gt; 里设置。我只需要当我发布一个版本时它自动帮我执行优化先。&lt;/p&gt;
&lt;p&gt;当发布时，先执行脚本&lt;br&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; $(ConfigurationName) == Release node $(ProjectDir)/r.js -o $(ProjectDir)/Scripts/build.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;img src=&quot;http://www.telerik.com/sfimages/default-source/blogs/build-visual-studio-png-png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;完成&quot;&gt;&lt;a href=&quot;#完成&quot; class=&quot;headerlink&quot; title=&quot;完成&quot;&gt;&lt;/a&gt;完成&lt;/h2&gt;&lt;p&gt;模块化你的 &lt;code&gt;JavaScript&lt;/code&gt; 是你迈向成功的一步，它只是一个方法让你更好创建和维护你庞大的应用。也可以下载 &lt;a href=&quot;http://www.kendoui.com/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kendo UI&lt;/a&gt; ，使用 &lt;code&gt;RequireJS&lt;/code&gt; 开始创建一些非常模块化的应用。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;其他资源&lt;/em&gt;&lt;br&gt;你可以在我们的ASP.NET MVC Examples repo 下载到这个例子，我也非常推荐你去看下这些资源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=vXjVFPosQHw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nicholas Zakas: Scalable JavaScript Application Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://backbonetutorials.com/organizing-backbone-using-modules/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Organizing Your Code Using Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://enterprisejquery.com/2010/10/how-good-c-habits-can-encourage-bad-javascript-habits-part-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Good C# Habits Encourage Bad JavaScript Habits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文翻译来源：&lt;a href=&quot;http://www.telerik.com/blogs/requirejs-fundamentals&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.telerik.com/b
    
    </summary>
    
      <category term="JS" scheme="http://blog.zacksdev.com/categories/JS/"/>
    
    
      <category term="javascript" scheme="http://blog.zacksdev.com/tags/javascript/"/>
    
      <category term="RequireJS" scheme="http://blog.zacksdev.com/tags/RequireJS/"/>
    
  </entry>
  
  <entry>
    <title>window.open不能打开新标签问题</title>
    <link href="http://blog.zacksdev.com/2014/11/03/2014-11-03-window-dot-openbu-neng-da-kai-xin-biao-qian-wen-ti/"/>
    <id>http://blog.zacksdev.com/2014/11/03/2014-11-03-window-dot-openbu-neng-da-kai-xin-biao-qian-wen-ti/</id>
    <published>2014-11-03T10:01:00.000Z</published>
    <updated>2016-04-19T02:59:37.000Z</updated>
    
    <content type="html">&lt;p&gt;##什么情形下是不可以的呢？&lt;/p&gt;
&lt;p&gt;我发现在 angularjs 中的 &lt;code&gt;$http.get/put/post&lt;/code&gt; 使用就会被浏览器拦截，经过多次尝试发现异步请求的都会被当成是弹出窗口，会被拦截。 但是直接使用 &lt;code&gt;button&lt;/code&gt;的 &lt;code&gt;click&lt;/code&gt; 事件则是在新的标签页打开的。&lt;/p&gt;
&lt;p&gt;故在异步请求中不能使用 &lt;code&gt;window.open&lt;/code&gt; 打开一个新的标签页，解决方案是：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; win=&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.open(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//预先打开一个新的标签页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$http.get(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;).success(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data, status, headers, config&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    win.location.href=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//需要打开的超链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).error(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data, status, headers, config&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;##什么情形下是不可以的呢？&lt;/p&gt;
&lt;p&gt;我发现在 angularjs 中的 &lt;code&gt;$http.get/put/post&lt;/code&gt; 使用就会被浏览器拦截，经过多次尝试发现异步请求的都会被当成是弹出窗口，会被拦截。 但是直接使用 &lt;code&gt;button&lt;/cod
    
    </summary>
    
      <category term="JS" scheme="http://blog.zacksdev.com/categories/JS/"/>
    
    
      <category term="javascript" scheme="http://blog.zacksdev.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>如何知道自定义字体的名称</title>
    <link href="http://blog.zacksdev.com/2014/02/07/2014-02-07-ru-he-zhi-dao-zi-ding-yi-zi-ti-de-ming-cheng/"/>
    <id>http://blog.zacksdev.com/2014/02/07/2014-02-07-ru-he-zhi-dao-zi-ding-yi-zi-ti-de-ming-cheng/</id>
    <published>2014-02-07T07:59:00.000Z</published>
    <updated>2016-04-19T02:59:37.000Z</updated>
    
    <content type="html">&lt;p&gt;在IOS开发中难免会使用到自定义的字体，但所添加的字体资源名称不是程序中所需要的fontName，那如何快速知道自已所添加自定义字体的fontName呢？&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *familyNames =[[&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; alloc]initWithArray:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; familyNames]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *fontNames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; indexFamily, indexFont;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(indexFamily=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;indexFamily&amp;lt;[familyNames count];++indexFamily)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       fontNames =[[&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; alloc]initWithArray:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; fontNamesForFamilyName:[familyNames objectAtIndex:indexFamily]]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(indexFont=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; indexFont&amp;lt;[fontNames count]; ++indexFont)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *fNames=&lt;span class=&quot;string&quot;&gt;@&quot;Thonburi-Bold,Thonburi,Thonburi-Light,SnellRoundhand-Black,SnellRoundhand-Bold,SnellRoundhand,AcademyEngravedLetPlain,MarkerFelt-Thin,MarkerFelt-Wide,Avenir-Heavy,Avenir-Oblique,Avenir-Black,Avenir-Book,Avenir-BlackOblique,Avenir-HeavyOblique,Avenir-Light,Avenir-MediumOblique,Avenir-Medium,Avenir-LightOblique,Avenir-Roman,Avenir-BookOblique,GeezaPro-Bold,GeezaPro,GeezaPro-Light,ArialRoundedMTBold,Trebuchet-BoldItalic,TrebuchetMS,TrebuchetMS-Bold,TrebuchetMS-Italic,ArialMT,Arial-BoldItalicMT,Arial-ItalicMT,Arial-BoldMT,Marion-Regular,Marion-Italic,Marion-Bold,Menlo-BoldItalic,Menlo-Regular,Menlo-Bold,Menlo-Italic,MalayalamSangamMN,MalayalamSangamMN-Bold,KannadaSangamMN,KannadaSangamMN-Bold,GurmukhiMN-Bold,GurmukhiMN,BodoniSvtyTwoOSITCTT-BookIt,BodoniSvtyTwoOSITCTT-Bold,BodoniSvtyTwoOSITCTT-Book,BradleyHandITCTT-Bold,Cochin-Bold,Cochin-BoldItalic,Cochin-Italic,Cochin,SinhalaSangamMN,SinhalaSangamMN-Bold,HiraKakuProN-W6,HiraKakuProN-W3,IowanOldStyle-Bold,IowanOldStyle-BoldItalic,IowanOldStyle-Italic,IowanOldStyle-Roman,DamascusBold,Damascus,DamascusMedium,DamascusSemiBold,AlNile-Bold,AlNile,Farah,Papyrus-Condensed,Papyrus,Verdana-BoldItalic,Verdana-Italic,Verdana,Verdana-Bold,ZapfDingbatsITC,DINCondensed-Bold,AvenirNextCondensed-Regular,AvenirNextCondensed-MediumItalic,AvenirNextCondensed-UltraLightItalic,AvenirNextCondensed-UltraLight,AvenirNextCondensed-BoldItalic,AvenirNextCondensed-Italic,AvenirNextCondensed-Medium,AvenirNextCondensed-HeavyItalic,AvenirNextCondensed-Heavy,AvenirNextCondensed-DemiBoldItalic,AvenirNextCondensed-DemiBold,AvenirNextCondensed-Bold,Courier,Courier-Oblique,Courier-BoldOblique,Courier-Bold,HoeflerText-Regular,HoeflerText-BlackItalic,HoeflerText-Italic,HoeflerText-Black,EuphemiaUCAS,EuphemiaUCAS-Bold,EuphemiaUCAS-Italic,Helvetica-Oblique,Helvetica-Light,Helvetica-Bold,Helvetica,Helvetica-BoldOblique,Helvetica-LightOblique,HiraMinProN-W6,HiraMinProN-W3,BodoniOrnamentsITCTT,Superclarendon-Regular,Superclarendon-BoldItalic,Superclarendon-Light,Superclarendon-BlackItalic,Superclarendon-Italic,Superclarendon-LightItalic,Superclarendon-Bold,Superclarendon-Black,DiwanMishafi,Optima-Regular,Optima-Italic,Optima-Bold,Optima-BoldItalic,Optima-ExtraBlack,GujaratiSangamMN-Bold,GujaratiSangamMN,DevanagariSangamMN,DevanagariSangamMN-Bold,AppleColorEmoji,SavoyeLetPlain,Kailasa,Kailasa-Bold,TimesNewRomanPS-BoldItalicMT,TimesNewRomanPSMT,TimesNewRomanPS-BoldMT,TimesNewRomanPS-ItalicMT,TeluguSangamMN,TeluguSangamMN-Bold,STHeitiSC-Medium,STHeitiSC-Light,AppleSDGothicNeo-Thin,AppleSDGothicNeo-SemiBold,AppleSDGothicNeo-Medium,AppleSDGothicNeo-Regular,AppleSDGothicNeo-Bold,AppleSDGothicNeo-Light,Futura-Medium,Futura-CondensedMedium,Futura-MediumItalic,Futura-CondensedExtraBold,BodoniSvtyTwoITCTT-Book,BodoniSvtyTwoITCTT-Bold,BodoniSvtyTwoITCTT-BookIta,Baskerville-Bold,Baskerville-SemiBoldItalic,Baskerville-BoldItalic,Baskerville,Baskerville-SemiBold,Baskerville-Italic,Symbol,STHeitiTC-Medium,STHeitiTC-Light,Copperplate,Copperplate-Light,Copperplate-Bold,PartyLetPlain,AmericanTypewriter-Light,AmericanTypewriter-CondensedLight,AmericanTypewriter-CondensedBold,AmericanTypewriter,AmericanTypewriter-Condensed,AmericanTypewriter-Bold,ChalkboardSE-Light,ChalkboardSE-Regular,ChalkboardSE-Bold,AvenirNext-MediumItalic,AvenirNext-Bold,AvenirNext-UltraLight,AvenirNext-DemiBold,AvenirNext-HeavyItalic,AvenirNext-Heavy,AvenirNext-Medium,AvenirNext-Italic,AvenirNext-UltraLightItalic,AvenirNext-BoldItalic,AvenirNext-Regular,AvenirNext-DemiBoldItalic,BanglaSangamMN,BanglaSangamMN-Bold,Noteworthy-Bold,Noteworthy-Light,Zapfino,TamilSangamMN,TamilSangamMN-Bold,Chalkduster,ArialHebrew-Bold,ArialHebrew-Light,ArialHebrew,Georgia-BoldItalic,Georgia-Bold,Georgia-Italic,Georgia,HelveticaNeue-BoldItalic,HelveticaNeue-Light,HelveticaNeue-UltraLightItalic,HelveticaNeue-CondensedBold,HelveticaNeue-MediumItalic,HelveticaNeue-Thin,HelveticaNeue-Medium,HelveticaNeue-ThinItalic,HelveticaNeue-LightItalic,HelveticaNeue-UltraLight,HelveticaNeue-Bold,HelveticaNeue,HelveticaNeue-CondensedBlack,GillSans,GillSans-Italic,GillSans-BoldItalic,GillSans-Light,GillSans-LightItalic,GillSans-Bold,Palatino-Roman,Palatino-Italic,Palatino-Bold,Palatino-BoldItalic,CourierNewPSMT,CourierNewPS-BoldMT,CourierNewPS-ItalicMT,CourierNewPS-BoldItalicMT,OriyaSangamMN,OriyaSangamMN-Bold,Didot-Bold,Didot-Italic,Didot,DINAlternate-Bold,BodoniSvtyTwoSCITCTT-Book&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([fNames rangeOfString:[fontNames objectAtIndex:indexFont]].location==&lt;span class=&quot;built_in&quot;&gt;NSNotFound&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Font name: %@&quot;&lt;/span&gt;,[fontNames objectAtIndex:indexFont]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这个方法可以过滤掉系统自带的字体，只打印所添加的自定义字体名称&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在IOS开发中难免会使用到自定义的字体，但所添加的字体资源名称不是程序中所需要的fontName，那如何快速知道自已所添加自定义字体的fontName呢？&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="iOS" scheme="http://blog.zacksdev.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blog.zacksdev.com/tags/iOS/"/>
    
      <category term="UI" scheme="http://blog.zacksdev.com/tags/UI/"/>
    
      <category term="objective-c" scheme="http://blog.zacksdev.com/tags/objective-c/"/>
    
      <category term="UIFont" scheme="http://blog.zacksdev.com/tags/UIFont/"/>
    
  </entry>
  
  <entry>
    <title>git分支的学习</title>
    <link href="http://blog.zacksdev.com/2013/12/21/2013-12-21-gitfen-zhi-de-xue-xi/"/>
    <id>http://blog.zacksdev.com/2013/12/21/2013-12-21-gitfen-zhi-de-xue-xi/</id>
    <published>2013-12-21T08:59:00.000Z</published>
    <updated>2016-04-19T02:59:37.000Z</updated>
    
    <content type="html">&lt;img src=&quot;/img/20131221/git.png&quot;&gt;
&lt;p&gt;git的分支是在git的使用过程中不可避免的，所以简单学习下git的分支的经常使用到的方法&lt;/p&gt;
&lt;p&gt;1.建立本地login分支&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;2.切换回本地master分支&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;3.合并分支login&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git merge login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;4.删除分支login&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch -d login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;5.可视化合并工具&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git mergetool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;6.提交login分支到远程服务器上&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push [远程名]  [分支名]  &lt;span class=&quot;comment&quot;&gt;//(origin  login)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;7.删除远程login分支&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push [远程名] :[分支名]    &lt;span class=&quot;comment&quot;&gt;//(origin :login)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;8.将远程分支login获取下来命名为sf&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b sf origin/login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;9.获取远程分支login简化命令：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout --track origin/login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;10.获取远程最新数据&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git fetch origin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;11.将远程login分支合并到当前的分支中&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git merge origin/login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;12.获取远程的分支login&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b login origin/login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;/img/20131221/git.png&quot;&gt;
&lt;p&gt;git的分支是在git的使用过程中不可避免的，所以简单学习下git的分支的经常使用到的方法&lt;/p&gt;
&lt;p&gt;1.建立本地login分支&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;t
    
    </summary>
    
      <category term="Git" scheme="http://blog.zacksdev.com/categories/Git/"/>
    
    
      <category term="git" scheme="http://blog.zacksdev.com/tags/git/"/>
    
      <category term="skill" scheme="http://blog.zacksdev.com/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>代码实现AutoLayout</title>
    <link href="http://blog.zacksdev.com/2013/11/28/2013-11-28-dai-ma-shi-xian-autolayout/"/>
    <id>http://blog.zacksdev.com/2013/11/28/2013-11-28-dai-ma-shi-xian-autolayout/</id>
    <published>2013-11-28T07:10:00.000Z</published>
    <updated>2016-04-19T02:59:37.000Z</updated>
    
    <content type="html">&lt;p&gt;纵然Xib在Xcode5下可以很好帮助我们快速搭建页面，但是避免不了团队工作中所带来的冲突，这使得Xib搭建页面是个麻烦事，所以在团队开发中避免不了写代码来构建页面，而AutoLayout是IOS6以后的主流页面构建方式。那如何使用代码来实现AutoLayout？其实也不难，NSLayoutConstraint和VFL足以解决这些难题。&lt;/p&gt;
&lt;p&gt;##NSLayoutConstraint##&lt;br&gt;在使用NSLayoutConstraint之前，需要了解它几个基本属性：&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;NSLayoutAttributeBaseline        基线&lt;br&gt;NSLayoutAttributeBottom          底部&lt;br&gt;NSLayoutAttributeCenterX         X轴中点&lt;br&gt;NSLayoutAttributeCenterY         Y轴中点&lt;br&gt;NSLayoutAttributeLeading         头&lt;br&gt;NSLayoutAttributeLeft            左&lt;br&gt;NSLayoutAttributeRight           右&lt;br&gt;NSLayoutAttributeTop             顶部&lt;br&gt;NSLayoutAttributeTrailing        尾&lt;br&gt;NSLayoutAttributeWidth           宽&lt;br&gt;NSLayoutAttributeHeight          高&lt;br&gt;NSLayoutAttributeNotAnAttribute  0 没属性&lt;/p&gt;
&lt;/blockquote&gt;&lt;br&gt;约束条件：&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;NSLayoutRelationLessThanOrEqual       -1  小于或等于&lt;br&gt;NSLayoutRelationEqual                 0   等于&lt;br&gt;NSLayoutRelationGreaterThanOrEqual    1   大于或等于&lt;/p&gt;
&lt;/blockquote&gt;&lt;br&gt;这几个属性和约束条件是我们代码构建AutoLayout的约束(NSLayoutConstraint)经常需要使用到的，NSLayoutConstraint有一个静态方法去构建约束：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Create constraints explicitly.  Constraints are of the form “view1.attr1 = view2.attr2 * multiplier + constant” .If your equation does not have a second view and attribute, use nil and NSLayoutAttributeNotAnAttribute.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)constraintWithItem:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)view1 attribute:(&lt;span class=&quot;built_in&quot;&gt;NSLayoutAttribute&lt;/span&gt;)attr1 relatedBy:(&lt;span class=&quot;built_in&quot;&gt;NSLayoutRelation&lt;/span&gt;)relation toItem:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)view2 attribute:(&lt;span class=&quot;built_in&quot;&gt;NSLayoutAttribute&lt;/span&gt;)attr2 multiplier:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)multiplier constant:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)c;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;约束条件的添加需要遵循以下几个方面&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;1、自身的约束添加到自身View上&lt;br&gt;2、对于两个同层级view之间的约束关系，添加到他们的父view上&lt;br&gt;3、对于两个不同层级view之间的约束关系，添加到他们最近的共同父view上&lt;br&gt;4、对于有层次关系的两个view之间的约束关系，添加到层次较高的父view上&lt;/p&gt;
&lt;/blockquote&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Single Demo&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;CodeForAutoLayout Demo&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://github.com/ZacksTsang/zackstsang.github.com/blob/master/images/files/CodeForAutoLayout.zip?raw=true&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github.com/ZacksTsang/zackstsang.github.com/blob/master/images/files/CodeForAutoLayout.zip?raw=true&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;纵然Xib在Xcode5下可以很好帮助我们快速搭建页面，但是避免不了团队工作中所带来的冲突，这使得Xib搭建页面是个麻烦事，所以在团队开发中避免不了写代码来构建页面，而AutoLayout是IOS6以后的主流页面构建方式。那如何使用代码来实现AutoLayout？其实也不难
    
    </summary>
    
      <category term="iOS" scheme="http://blog.zacksdev.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blog.zacksdev.com/tags/iOS/"/>
    
      <category term="UI" scheme="http://blog.zacksdev.com/tags/UI/"/>
    
      <category term="objective-c" scheme="http://blog.zacksdev.com/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>Mac系统下git与github的一些简单使用</title>
    <link href="http://blog.zacksdev.com/2013/11/16/2013-11-16-macxi-tong-xia-gityu-githubde-%5B?%5D-xie-jian-dan-shi-yong/"/>
    <id>http://blog.zacksdev.com/2013/11/16/2013-11-16-macxi-tong-xia-gityu-githubde-[?]-xie-jian-dan-shi-yong/</id>
    <published>2013-11-16T02:03:00.000Z</published>
    <updated>2016-04-19T02:59:37.000Z</updated>
    
    <content type="html">&lt;p&gt;Mac系统下一般都会有git了，不用去安装。查看git的版本,在终端输入&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;回车后会出现：git version 1.8.3.4 (Apple Git-47)，可以看到git的版本信息。如果没有的话可以去 &lt;a href=&quot;http://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://git-scm.com/downloads&lt;/a&gt; 下载安装&lt;/p&gt;
&lt;p&gt;##创建密钥##&lt;br&gt;首先，查看机器上是否存在密钥&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$cd ~/.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;如果提示：No such file or directory 说明你是第一次使用git，否则需要移除已存在的key，（注：一般先备份，再移除，可以使用下面的命令）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$mkdir backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$cp id_rsa* backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$rm id_rsa*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;重新生成新的密钥：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ssh-keygen -t rsa -C &amp;quot;you github email&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这里会提示输入密码，可以设置一个密码，防止被人往项目里添加代码和内容。生成完后&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ls&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;可以看到有这三个文件：id_rsa        id_rsa.pub    known_hosts&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$vi id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;将里面的内容copy，粘贴到GitHub自己账号上的SSH Keys上（注：在GitHub账号管理上会有SSH Keys选项卡，添加一个key，把复制内容拷贝上去就可以了）&lt;br&gt;测试是否连接成功：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ssh -v git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;出现：Hi you name! You’ve successfully authenticated, but GitHub does not provide shell access. 即连接成功，可以进行项目的创建与提交了。&lt;/p&gt;
&lt;p&gt;##Git常用的一些基本命令##&lt;br&gt;在项目的根目录下，初始化本地仓库&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;建立远程连接，和GitHub上的项目建立连接&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git remote add origin &amp;quot;github的项目地址&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;本地更改文件后，需要提交更改时，（注：下面的命令指示提交到本地的仓库）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git add -u&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$git commit -m &amp;quot;注解&amp;quot;   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;提交更改代码到远程分支&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git push origin 远程分支名称  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;获取远程分支最新代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git pull origin  远程分支名称   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;撤销更改&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$git reset -u  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mac系统下一般都会有git了，不用去安装。查看git的版本,在终端输入&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br
    
    </summary>
    
      <category term="Git" scheme="http://blog.zacksdev.com/categories/Git/"/>
    
    
      <category term="git" scheme="http://blog.zacksdev.com/tags/git/"/>
    
      <category term="skill" scheme="http://blog.zacksdev.com/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>菜鸟学习UINavigation</title>
    <link href="http://blog.zacksdev.com/2013/11/15/2013-11-15-cai-niao-xue-xi-uinavigation/"/>
    <id>http://blog.zacksdev.com/2013/11/15/2013-11-15-cai-niao-xue-xi-uinavigation/</id>
    <published>2013-11-15T03:53:00.000Z</published>
    <updated>2016-04-19T02:59:37.000Z</updated>
    
    <content type="html">&lt;p&gt;##UINavigation Bar For IOS7##&lt;br&gt;IOS7中将UINavigation Bar和Status Bar连接在一起，给人呈现一种融为一体的感觉，而不再是独立的一部分。&lt;/p&gt;
&lt;img src=&quot;/img/20131115/uinavigation_desc.png&quot; class=&quot;center&quot;&gt;
&lt;p&gt;UInavigation Bar的几个属性在上图我们可以清晰看到，通常我们只需要操作这几个属性，还有leftBarButtonItems,rightBarButtonItems，下面是我们使用UINavigation Bar过程中会经常用到的方法：&lt;/p&gt;
&lt;p&gt;###设置背景颜色###&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setBarTintColor:color]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;如果是使用默认的UINavigationController，则在&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application didFinishLaunchingWithOptions:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)launchOptions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setBarTintColor:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor]]];&lt;span class=&quot;comment&quot;&gt;//设置自己的颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;而在自定义的UINavigationController中，则&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setBarTintColor:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor]]];&lt;span class=&quot;comment&quot;&gt;//设置自己的颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;值得注意的是：如果在子Controller的viewDidLoad中加入此代码时，则会发生切换回其它viewController时，UINavigation Bar背景会改变为子viewController改变的颜色，而当前的viewConroller则不会改变。&lt;/p&gt;
&lt;p&gt;###设置背景图片###&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setBackgroundImage:image forBarMetrics:&lt;span class=&quot;built_in&quot;&gt;UIBarMetricsDefault&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;###设置返回的图片###&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setBackIndicatorImage:image];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setBackIndicatorTransitionMaskImage:image];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;但需要注意的是，这两个是缺一不可的。&lt;/p&gt;
&lt;p&gt;###设置返回字体颜色###&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setTintColor:color];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;###自定义标题###&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UINavigationBar&lt;/span&gt; appearance] setTitleTextAttributes:[&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; dictionaryWithObjectsAndKeys:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;245.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;255.0&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;245.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;255.0&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;245.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;255.0&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSForegroundColorAttributeName&lt;/span&gt;,[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; fontWithName:&lt;span class=&quot;string&quot;&gt;@&quot;HelveticaNeue-Light&quot;&lt;/span&gt; size:&lt;span class=&quot;number&quot;&gt;22.0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;###添加按钮###&lt;br&gt;在viewController的viewDidLoad中加，注：下面代码是加单个右按钮，多个则使用rightBarButtonItems，而左按钮则是leftBarButtonItem和leftBarButtonItems。&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItem&lt;/span&gt; *doneItem = [[&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItem&lt;/span&gt; alloc] initWithBarButtonSystemItem:&lt;span class=&quot;built_in&quot;&gt;UIBarButtonSystemItemDone&lt;/span&gt; target:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; action:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationItem.rightBarButtonItem = doneItem;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;##UINavigation Bar For IOS7##&lt;br&gt;IOS7中将UINavigation Bar和Status Bar连接在一起，给人呈现一种融为一体的感觉，而不再是独立的一部分。&lt;/p&gt;
&lt;img src=&quot;/img/20131115/uinavigatio
    
    </summary>
    
      <category term="iOS" scheme="http://blog.zacksdev.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blog.zacksdev.com/tags/iOS/"/>
    
      <category term="UI" scheme="http://blog.zacksdev.com/tags/UI/"/>
    
      <category term="objective-c" scheme="http://blog.zacksdev.com/tags/objective-c/"/>
    
  </entry>
  
</feed>
