<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Zacks Tsang Blog]]></title>
  <link href="http://ZacksTsang.github.io/atom.xml" rel="self"/>
  <link href="http://ZacksTsang.github.io/"/>
  <updated>2013-12-17T10:35:58+08:00</updated>
  <id>http://ZacksTsang.github.io/</id>
  <author>
    <name><![CDATA[Zacks Tsang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[代码实现AutoLayout]]></title>
    <link href="http://ZacksTsang.github.io/blog/2013/11/28/dai-ma-shi-xian-autolayout/"/>
    <updated>2013-11-28T15:10:00+08:00</updated>
    <id>http://ZacksTsang.github.io/blog/2013/11/28/dai-ma-shi-xian-autolayout</id>
    <content type="html"><![CDATA[<p>纵然Xib在Xcode5下可以很好帮助我们快速搭建页面，但是避免不了团队工作中所带来的冲突，这使得Xib搭建页面是个麻烦事，所以在团队开发中避免不了写代码来构建页面，而AutoLayout是IOS6以后的主流页面构建方式。那如何使用代码来实现AutoLayout？其实也不难，NSLayoutConstraint和VFL足以解决这些难题。</p>

<h2>NSLayoutConstraint</h2>

<p>在使用NSLayoutConstraint之前，需要了解它几个基本属性：</p>

<blockquote><p>NSLayoutAttributeBaseline        基线<br/> NSLayoutAttributeBottom          底部<br/> NSLayoutAttributeCenterX         X轴中点<br/> NSLayoutAttributeCenterY         Y轴中点<br/> NSLayoutAttributeLeading         头<br/> NSLayoutAttributeLeft            左<br/> NSLayoutAttributeRight           右<br/> NSLayoutAttributeTop             顶部<br/> NSLayoutAttributeTrailing        尾<br/> NSLayoutAttributeWidth           宽<br/> NSLayoutAttributeHeight          高<br/> NSLayoutAttributeNotAnAttribute  0 没属性</p></blockquote>


<p>约束条件：</p>

<blockquote><p>NSLayoutRelationLessThanOrEqual       -1  小于或等于<br/> NSLayoutRelationEqual                 0   等于<br/> NSLayoutRelationGreaterThanOrEqual    1   大于或等于</p></blockquote>


<p>这几个属性和约束条件是我们代码构建AutoLayout的约束(NSLayoutConstraint)经常需要使用到的，NSLayoutConstraint有一个静态方法去构建约束：</p>

<blockquote><p>Create constraints explicitly.  Constraints are of the form &#8220;view1.attr1 = view2.attr2 * multiplier + constant&#8221; .If your equation does not have a second view and attribute, use nil and NSLayoutAttributeNotAnAttribute.</p></blockquote>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">constraintWithItem:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">view1</span> <span class="nf">attribute:</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="nv">attr1</span> <span class="nf">relatedBy:</span><span class="p">(</span><span class="n">NSLayoutRelation</span><span class="p">)</span><span class="nv">relation</span> <span class="nf">toItem:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">view2</span> <span class="nf">attribute:</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="nv">attr2</span> <span class="nf">multiplier:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">multiplier</span> <span class="nf">constant:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">c</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>约束条件的添加需要遵循以下几个方面</p>

<blockquote><p>1、自身的约束添加到自身View上<br/>2、对于两个同层级view之间的约束关系，添加到他们的父view上<br/>3、对于两个不同层级view之间的约束关系，添加到他们最近的共同父view上<br/>4、对于有层次关系的两个view之间的约束关系，添加到层次较高的父view上</p></blockquote>




<blockquote><p>Demo</p><footer><strong>CodeForAutoLayout</strong> <cite><a href='https://zackstsang.github.ios/images/files/CodeForAutoLayout.zip'>zackstsang.github.ios/images/&hellip;</a></cite></footer></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac系统下git与github的一些简单使用]]></title>
    <link href="http://ZacksTsang.github.io/blog/2013/11/16/macxi-tong-xia-gityu-githubde-%5B%3F%5D-xie-jian-dan-shi-yong/"/>
    <updated>2013-11-16T10:03:00+08:00</updated>
    <id>http://ZacksTsang.github.io/blog/2013/11/16/macxi-tong-xia-gityu-githubde-[?]-xie-jian-dan-shi-yong</id>
    <content type="html"><![CDATA[<p>Mac系统下一般都会有git了，不用去安装。查看git的版本,在终端输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$git --version</span></code></pre></td></tr></table></div></figure>


<p>回车后会出现：git version 1.8.3.4 (Apple Git-47)，可以看到git的版本信息。如果没有的话可以去 <a href="http://git-scm.com/downloads">http://git-scm.com/downloads</a> 下载安装</p>

<h2>创建密钥</h2>

<p>首先，查看机器上是否存在密钥</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$cd ~/.ssh</span></code></pre></td></tr></table></div></figure>


<p>如果提示：No such file or directory 说明你是第一次使用git，否则需要移除已存在的key，（注：一般先备份，再移除，可以使用下面的命令）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$mkdir backup
</span><span class='line'>$cp id_rsa* backup
</span><span class='line'>$rm id_rsa*</span></code></pre></td></tr></table></div></figure>


<p>重新生成新的密钥：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ssh-keygen -t rsa -C "you github email"</span></code></pre></td></tr></table></div></figure>


<p>这里会提示输入密码，可以设置一个密码，防止被人往项目里添加代码和内容。生成完后</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ls</span></code></pre></td></tr></table></div></figure>


<p>可以看到有这三个文件：id_rsa     id_rsa.pub  known_hosts</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$vi id_rsa.pub</span></code></pre></td></tr></table></div></figure>


<p>将里面的内容copy，粘贴到GitHub自己账号上的SSH Keys上（注：在GitHub账号管理上会有SSH Keys选项卡，添加一个key，把复制内容拷贝上去就可以了）
测试是否连接成功：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ssh -v git@github.com</span></code></pre></td></tr></table></div></figure>


<p>出现：Hi you name! You&rsquo;ve successfully authenticated, but GitHub does not provide shell access. 即连接成功，可以进行项目的创建与提交了。</p>

<h2>Git常用的一些基本命令</h2>

<p>在项目的根目录下，初始化本地仓库</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$git init</span></code></pre></td></tr></table></div></figure>


<p>建立远程连接，和GitHub上的项目建立连接</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$git remote add origin "github的项目地址"</span></code></pre></td></tr></table></div></figure>


<p>本地更改文件后，需要提交更改时，（注：下面的命令指示提交到本地的仓库）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$git add -u 
</span><span class='line'>$git commit -m "注解"</span></code></pre></td></tr></table></div></figure>


<p>提交更改代码到远程分支</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$git push origin 远程分支名称</span></code></pre></td></tr></table></div></figure>


<p>获取远程分支最新代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$git pull origin  远程分支名称</span></code></pre></td></tr></table></div></figure>


<p>撤销更改</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$git reset -u</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[菜鸟学习UINavigation]]></title>
    <link href="http://ZacksTsang.github.io/blog/2013/11/15/cai-niao-xue-xi-uinavigation/"/>
    <updated>2013-11-15T11:53:00+08:00</updated>
    <id>http://ZacksTsang.github.io/blog/2013/11/15/cai-niao-xue-xi-uinavigation</id>
    <content type="html"><![CDATA[<h2>UINavigation Bar For IOS7</h2>

<p>IOS7中将UINavigation Bar和Status Bar连接在一起，给人呈现一种融为一体的感觉，而不再是独立的一部分。</p>

<p><img class="center" src="http://ZacksTsang.github.io/images/20131115/uinavigation_desc.png"></p>

<p>UInavigation Bar的几个属性在上图我们可以清晰看到，通常我们只需要操作这几个属性，还有leftBarButtonItems,rightBarButtonItems，下面是我们使用UINavigation Bar过程中会经常用到的方法：</p>

<h3>设置背景颜色</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setBarTintColor:</span><span class="n">color</span><span class="p">]]</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果是使用默认的UINavigationController，则在</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="n">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span> <span class="nf">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">launchOptions</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setBarTintColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">]]];</span><span class="c1">//设置自己的颜色</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>而在自定义的UINavigationController中，则</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setBarTintColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">]]];</span><span class="c1">//设置自己的颜色</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>值得注意的是：如果在子Controller的viewDidLoad中加入此代码时，则会发生切换回其它viewController时，UINavigation Bar背景会改变为子viewController改变的颜色，而当前的viewConroller则不会改变。</p>

<h3>设置背景图片</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setBackgroundImage:</span><span class="n">image</span> <span class="nl">forBarMetrics:</span><span class="n">UIBarMetricsDefault</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>设置返回的图片</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setBackIndicatorImage:</span><span class="n">image</span><span class="p">];</span>
</span><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setBackIndicatorTransitionMaskImage:</span><span class="n">image</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>但需要注意的是，这两个是缺一不可的。</p>

<h3>设置返回字体颜色</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setTintColor:</span><span class="n">color</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>自定义标题</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setTitleTextAttributes:</span><span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys:</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIColor</span> <span class="nl">colorWithRed:</span><span class="mf">245.0</span><span class="o">/</span><span class="mf">255.0</span> <span class="nl">green:</span><span class="mf">245.0</span><span class="o">/</span><span class="mf">255.0</span> <span class="nl">blue:</span><span class="mf">245.0</span><span class="o">/</span><span class="mf">255.0</span> <span class="nl">alpha:</span><span class="mf">1.0</span><span class="p">],</span>
</span><span class='line'>  <span class="n">NSForegroundColorAttributeName</span><span class="p">,[</span><span class="n">UIFont</span> <span class="nl">fontWithName:</span><span class="s">@&quot;HelveticaNeue-Light&quot;</span> <span class="nl">size:</span><span class="mf">22.0</span><span class="p">],</span>
</span><span class='line'>  <span class="n">NSFontAttributeName</span><span class="p">,</span> <span class="nb">nil</span><span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>添加按钮</h3>

<p>在viewController的viewDidLoad中加，注：下面代码是加单个右按钮，多个则使用rightBarButtonItems，而左按钮则是leftBarButtonItem和leftBarButtonItems。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UIBarButtonItem</span> <span class="o">*</span><span class="n">doneItem</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithBarButtonSystemItem:</span><span class="n">UIBarButtonSystemItemDone</span> <span class="nl">target:</span><span class="n">self</span> <span class="nl">action:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'> <span class="n">self</span><span class="p">.</span><span class="n">navigationItem</span><span class="p">.</span><span class="n">rightBarButtonItem</span> <span class="o">=</span> <span class="n">doneItem</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
